name: Build and Release Spring Boot JAR

on:
  workflow_dispatch:  # 支持手动触发
    inputs:
      tag_version:
        description: 'The tag version for the release (e.g., v1.0.0)'
        required: true
        type: string
  push:
    tags:
      - 'v*'  # 当推送以 'v' 开头的标签时触发（例如 v1.0.0）

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # 赋予 GITHUB_TOKEN 写入权限

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # 使用 JDK 17
          distribution: 'temurin'

      - name: Make mvnw executable
        run: chmod +x ./mvnw  # 为 mvnw 添加执行权限

      - name: Build the project with Maven
        run: ./mvnw clean package  # 使用 Maven Wrapper 构建项目

      - name: Get tag version
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TAG_VERSION=${{ github.event.inputs.tag_version }}" >> $GITHUB_ENV
          else
            echo "TAG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub 自动提供的 token
        with:
          tag_name: ${{ env.TAG_VERSION }}  # 使用标签名称作为 Release 的版本
          release_name: Release ${{ env.TAG_VERSION }}  # Release 的名称
          draft: false
          prerelease: false

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 从创建 Release 的步骤中获取上传 URL
          asset_path: target/*.jar  # 直接上传构建的 JAR 文件
          asset_name: study-workflows-${{ env.TAG_VERSION }}.jar  # 上传后的文件名
          asset_content_type: application/java-archive
